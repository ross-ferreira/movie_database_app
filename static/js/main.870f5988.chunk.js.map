{"version":3,"sources":["data/axios.js","components/SearchResults/SearchResults.js","components/SearchResults/index.js","data/actions/api.js","data/actions/actions.js","components/Pages/Pages.js","components/Pages/index.js","components/Loading.js","components/SearchForm/SearchForm.js","components/SearchForm/index.js","components/Article/Article.js","components/Article/index.js","components/Footer.js","components/Header.js","App.js","data/initial.js","data/store.js","reducer/reducer.js","index.js"],"names":["axios","create","baseURL","headers","Accept","SearchResults","searchResults","getDataSetId","movieArticle","totalResults","setLoading","loading","length","className","Response","map","item","index","key","alt","src","Poster","to","onClick","searchQuery","imdbID","console","log","handleArticle","imdbId","Title","Year","connect","state","initialform","currentPage","dispatch","idSearchQuery","get","then","data","type","getMovieData","Pages","setCurrentPage","paginate","useState","pageCounter","setPageCounter","pageNos","Math","ceil","pageNeighboursNo","pageNeighboursNoArr","i","push","pageNosArr","style","backgroundColor","cursor","id","selectedPage","selectPage","setCurrentPageNo","Loading","SearchForm","getDataSet","reset","updateSearchPage","typeValue","handleSelectedType","plotValue","handleSelectedPlot","handleFormSubmit","dropDownStatus","setDropDownStatus","handleSearchBox","e","formValues","setFormValues","handleFormChange","target","name","value","title","year","placeholder","onChange","preventDefault","checked","event","pageQuery","Search","getData","refreshData","selectedType","newTypeValue","setType","selectedPlot","newPlotValue","setPlot","newSearchValue","setSearchForm","Article","imdbRating","Released","Runtime","Genre","Actors","Plot","Footer","Component","Header","App","exact","path","counter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","setSearchResults","setMovieArticle","setTotalResponses","loadingState","initial","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.870f5988.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\nbaseURL: \"https://www.omdbapi.com/\", \n        headers: {\n            Accept: \"application/json\",\n        },\n});\n","import React from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nfunction SearchResults ({\n  searchResults,\n  movieArticle,\n  getDataSetId,\n  totalResults,\n  setLoading,\n  loading,\n}) {\n\n\n\nconst handleArticle= index => {\n    setLoading();\n    let searchQuery=`?apikey=9bac2e43&i=${searchResults[index].imdbID}`;\n    console.log(\"query\",searchResults[index].imdbID)\n    getDataSetId(searchQuery);\n}\n\n  return (\n    <>\n      {searchResults.length < 1 ? null:\n      <>\n        <h1 className=\"title-search-results\">Search Results</h1>\n        <h2 className=\"no-search-results\">No. Results: {totalResults}</h2> \n          <div className=\"searchResults\">\n              {searchResults.Response !== \"False\" ? searchResults.map((item,index)=>(\n                <div className=\"search-results-cont\">\n                  <picture key={index + 1} className=\"poster-search-results\">\n                    <img alt=\"search-poster\" key={index} className=\"poster-img-results\" src={item.Poster}/>\n                  </picture>\n                  <Link to=\"/movie\">\n                    <p key={index} onClick={()=>(handleArticle(index))} imdbId={item.imdbID}>{item.Title}</p>\n                  </Link>\n                  <p key={index + 2} className=\"search-result-year\">{item.Year}</p>\n                </div>\n              )):null}\n          </div>\n          {searchResults.Response === \"False\" ? <h2 className=\"no-search-results\">\"No Results-Search Again\"</h2>:null}\n        </>\n      }\n    </>\n  );\n}\n\nexport default SearchResults;\n\n\n","import { connect } from 'react-redux';\n\nimport { getMovieData } from '../../data/actions/api';\n\nimport {setLoading} from '../../data/actions/actions';\n\nimport SearchResults from './SearchResults';\n\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        movieArticle:state.movieArticle,\n        searchResults:state.searchResults,\n        totalResults:state.totalResults,\n        initialform:state.initialform,\n        currentPage:state.currentPage,\n        loading:state.loading,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      getDataSetId: (idSearchQuery) => {\n          dispatch( getMovieData(idSearchQuery) )\n      },\n      setLoading:() => {\n        dispatch( setLoading() );\n    },\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchResults);\n\n\n","import axios from '../axios';\n\nexport const getData = (searchQuery) => (dispatch) =>{\n    axios.get(searchQuery).then(({ data })=>{\n        // console.log(\"searchdatafromapi\",data);\n        dispatch({\n            type:\"setsearch\",\n            data: (data.Response === \"False\"? data : data.Search ),\n        })\n        dispatch({\n            type:\"settotalresponses\",\n            data: (data.Response === \"False\"? 0 : data.totalResults ),\n        })\n        dispatch({\n            type:\"setloading\",\n        })\n    });\n}\nexport const refreshData = (pageQuery) => (dispatch) =>{\n    axios.get(pageQuery).then(({ data })=>{\n        // console.log(\"searchdatafromapi\",data);\n        dispatch({\n            type:\"setsearch\",\n            data: (data.Response === \"False\"? data : data.Search ),\n        })\n        dispatch({\n            type:\"settotalresponses\",\n            data: (data.Response === \"False\"? 0 : data.totalResults ),\n        })\n        dispatch({\n            type:\"setloading\",\n        })\n    });\n}\n\nexport const getMovieData = (idSearchQuery) => (dispatch) =>{\n    axios.get(idSearchQuery).then(({ data })=>{\n        \n        // console.log(\"movieDatafromapi\",data);\n\n        dispatch({\n            type:\"setarticle\",\n            data: data,\n        })\n        dispatch({\n            type:\"setloading\",\n        })\n    });\n}\n\n\n","  export const reset = () => {\n    return {\n      type: \"RESET\",\n    }; \n  };\n\n  export const setCurrentPageNo = (selectedPage) => {\n    return {\n      type: \"SETCURRENTPAGE\",\n      selectPage:selectedPage,\n    }; \n  };\n\n  export const setLoading = () => {\n    return {\n      type: \"setloading\",\n    }; \n  };\n\n  export const setType = (selectedType) => {\n    return {\n      type: \"SETTYPE\",\n      newTypeValue:selectedType,\n    }; \n  };\n\n  export const setPlot = (selectedPlot) => {\n    return {\n      type: \"SETPLOT\",\n      newPlotValue:selectedPlot,\n    }; \n  };\n\n\n  export const setSearchForm = (formValues) => {\n    return {\n      type: \"SETSEARCHFORM\",\n      newSearchValue:formValues,\n    }; \n  };\n\n\n\n  ","import React, { useState } from \"react\";\n\n\nconst Pages = ({\n    searchResults,\n    totalResults,\n    currentPage,\n    setCurrentPage,\n    paginate\n    }) => {\n\n    const pagesArr=[1,7,13,19,25,31,37,43,49,55,61,67,73,79,85]\n    const resultsPerPage = 10;\n    const neightboursPerPage=6\n\n    const [pageCounter, setPageCounter] = useState(0)\n\n    let pageNos= Math.ceil(totalResults/resultsPerPage)\n\n    let pageNeighboursNo= Math.ceil(pageNos/neightboursPerPage)\n    let pageNeighboursNoArr=[]\n    for (let i = 1 ;i < pageNeighboursNo +1 ; i++){\n        pageNeighboursNoArr.push(i);\n    }\n    // console.log(\"pageNeighboursNo\",pageNeighboursNo)\n    // console.log(\"pageNeighboursNoArr\",pageNeighboursNoArr)\n\n\n//Set Page Neighbours\n    let pageNosArr=[]\n    for (let i=pagesArr[pageCounter]  ;i < (pageCounter < pageNeighboursNoArr.length -1 ? pageNeighboursNoArr[pageCounter] * 6 :pageNos ) +1 ; i++){\n        pageNosArr.push(i);\n    }\n//Page Neighbour Navigation\n    const handlePageCounterInc =() =>{\n        setPageCounter(pageCounter + 1)\n    }\n    const handlePageCounterDec =() =>{\n        setPageCounter(pageCounter - 1)\n    }\n\n    //   console.log(\"pageCounter\",pageCounter)\n    //   console.log(\"pageNos\",pageNos)\n\n   const style={\n        backgroundColor:\"transparent\",\n        cursor:\"pointer\",\n    }\n    return(\n        <>\n            <nav id=\"pagination-cont\">\n                <ul className='pagination'>\n                    <li style={style} onClick={pageCounter >= 1 ? handlePageCounterDec : null } className='page-link'>PREV</li>\n                    {pageNosArr.map((item,index)=>(\n                    <li key={index} style={style} className='page-link' onClick={()=>{setCurrentPage(item);paginate(item)}}>\n                        { item }\n                    </li>\n                    ))}\n                    <li style={style} onClick={ pageCounter > pageNeighboursNoArr.length -2 ? null : handlePageCounterInc } className='page-link'>NEXT</li>\n                    {/* <li className='page-link'>LAST</li> */}\n                 </ul>\n            </nav>\n        </>\n    )\n}\n\nexport default Pages;\n","import { connect } from 'react-redux';\n\nimport {setCurrentPageNo} from '../../data/actions/actions'\n\nimport Pages from './Pages';\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        searchResults:state.searchResults,\n        totalResults:state.totalResults,\n        currentPage:state.currentPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setCurrentPage: (selectedPage) => {\n          dispatch(setCurrentPageNo(selectedPage))\n      }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Pages)\n","import React from \"react\";\n\nfunction Loading () {\n\n\n    return (\n        <>\n        <div className=\"spinner\">\n            <div className=\"bounce1\"></div>\n            <div className=\"bounce2\"></div>\n            <div className=\"bounce3\"></div>\n        </div>\n        </>\n    );\n  }\n  \n export default Loading","import React, { useState } from \"react\";\n\nimport SearchResults from '../SearchResults';\n\nimport Pages from '../Pages'\n\nimport Loading from '../Loading';\n\n\nfunction SearchForm({\n  getDataSet,\n  reset,\n  initialform,\n  currentPage,\n  updateSearchPage,\n  setLoading,\n  loading,\n  searchResults,\n  typeValue,\n  handleSelectedType,\n  plotValue,\n  handleSelectedPlot,\n  handleFormSubmit,\n\n}) {\n\n  //Set Dropdown Box Status\n  const [dropDownStatus, setDropDownStatus,] = useState(false)\n  const handleSearchBox = (e) =>\n    setDropDownStatus(!dropDownStatus);\n\n  //Set Search Inputs\n  const [formValues, setFormValues] = useState(initialform)\n  const handleFormChange = (e) => setFormValues({\n    ...formValues,\n    [e.target.name]: e.target.value,\n  });\n\n\n  // Search Request to API Actions\n  let searchQuery = `?apikey=9bac2e43&type=${typeValue}&s=${formValues.title}&y=${formValues.year}&plot=${plotValue}&page=${currentPage}`;\n  const handleSearch = e => {\n    e.preventDefault();\n    handleFormSubmit(formValues);\n    setLoading();\n    getDataSet(searchQuery);\n  }\n\n  //Reset Search Bar\n  const handleReset = (e) => {\n    e.preventDefault();\n    reset();\n    setFormValues(initialform);\n  }\n\n  // console.log(\"current page\",currentPage);\n\n  //Change Page\n  const paginate = (item) => {\n    setLoading();\n    let pageQuery = `?apikey=9bac2e43&type=${typeValue}&s=${initialform.title}&y=${initialform.year}&plot=${plotValue}&page=${item}`;\n    updateSearchPage(pageQuery);\n  }\n\n  return (\n    <>\n      <div className=\"search-form-new\">\n        <div className=\"all-btn\" onClick={handleSearchBox}>\n          All\n      </div>\n        <div>\n          <input className=\"search-form-input\" placeholder=\"Enter Title\" onChange={handleFormChange} type=\"text\" name=\"title\" value={formValues.title} />\n        </div>\n        <div className=\"new-src-btn\" onClick={handleReset}>Reset</div>\n        <img alt=\"searc-icon\" onClick={handleSearch} className=\"search-image\" src=\"https://img.icons8.com/material/4ac144/256/search.png\" />\n      </div>\n      {dropDownStatus ?\n        <div className=\"dropdown-box\">\n          <div onClick={handleSearchBox} className=\"dropdown-box-close\">X</div>\n          <div className=\"title-box\" >\n            <label className=\"search-form-label\">Year</label>\n          <div className=\"input-group\">\n            <input className=\"search-form-input\" placeholder=\"Enter Year\" onChange={handleFormChange} type=\"text\" name=\"year\" value={formValues.year} />\n          </div>\n          </div>\n          <div className=\"type-box\">\n            <label className=\"search-form-label\">Type</label>\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value=\"series\"\n                  checked={typeValue === \"series\"}\n                  onChange={(event) => handleSelectedType(event.target.value)}\n                  className=\"form-check-input\"\n                />Series\n                </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            name=\"type\"\n                            value=\"movie\"\n                            checked={typeValue === \"movie\"}\n                            onChange={(event) => handleSelectedType(event.target.value)}\n                            className=\"form-check-input\"\n                          />Movie\n                </label>\n                      </div>\n          </div>\n          <div className=\"plot-box\">\n    <label className=\"search-form-label\">Plot</label>\n    <div className=\"form-check\">\n      <label>\n          <input\n              type=\"radio\"\n              name=\"plot\"\n              value=\"short\"\n              checked={plotValue === \"short\"}\n              onChange={(event) => handleSelectedPlot(event.target.value)}\n              className=\"form-check-input\"\n          />Short Movie\n      </label>\n      </div>\n      <div className=\"form-check\">\n      <label>\n          <input\n              type=\"radio\"\n              name=\"plot\"\n              value=\"full\"\n              checked={plotValue === \"full\"}\n              onChange={(event) => handleSelectedPlot(event.target.value)}\n              className=\"form-check-input\"\n          />Full Length Movie\n      </label>\n    </div>\n    </div>\n        </div> : null}\n      {loading ? <h1><Loading /></h1> :\n        <>\n          <SearchResults />\n          {searchResults.length > 1 ? <Pages className=\"pagination-cont\" paginate={paginate} /> : <picture className=\"oscars-cont\"><img alt=\"oscars-img\" className=\"oscars-image\" src=\"https://media1.giphy.com/media/3ohc0Y1TI0vawx60Sc/giphy.gif?cid=ecf05e47760a5d7a72c6e69f4d7133fcbecd47c441ce67fa&rid=giphy.gif\" /></picture>}\n        </>\n      }\n\n\n    </>\n  );\n}\n\nexport default SearchForm;\n\n","import { connect } from 'react-redux';\n\nimport { reset,setLoading,setType,setPlot,setSearchForm } from '../../data/actions/actions'\n\nimport { getData,refreshData } from '../../data/actions/api'\n\nimport SearchForm from './SearchForm';\n\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        // srcImage: state.images[(state.counter -1)].url,\n        movieArticle: state.movieArticle,\n        searchResults: state.searchResults,\n        initialform: state.initialform,\n        currentPage: state.currentPage,\n        loading: state.loading,\n        typeValue: state.typeValue,\n        plotValue: state.plotValue,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getDataSet: (searchQuery) => {\n            dispatch(getData(searchQuery))\n        },\n        reset:() => {\n            dispatch( reset() );\n        },\n        updateSearchPage: (pageQuery) => {\n            dispatch(refreshData(pageQuery))\n        },\n        setLoading:() => {\n            dispatch( setLoading() );\n        },\n        handleSelectedType: (selectedType) => {\n            dispatch(setType(selectedType))\n        },\n\n        handleSelectedPlot: (selectedPlot) => {\n            dispatch(setPlot(selectedPlot))\n        },\n        handleFormSubmit: (formValues) => {\n            dispatch(setSearchForm(formValues))\n        },\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchForm);\n\n","import React from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nimport Loading from '../Loading';\n\nfunction Article ({\n  searchResults,\n  movieArticle,\n  loading}){\n\n  return (\n    <>\n      {loading? <h2><Loading/></h2> : \n        <>\n        <Link to=\"/\">\n          <div className=\"btn-cont-return\">\n            <button className=\"btn btn-outline-primary\">Back To Results</button>\n          </div>\n        </Link>\n        <div className=\"article-cont-parent\">\n          <div className=\"article-cont\">\n            <div className=\"image-title-cont\">\n              <picture className=\"poster-article\">\n                <img alt=\"poster-movie\" className=\"poster-image\" src={movieArticle.Poster} />\n              </picture>\n              <h1 className=\"main-header-article\">{movieArticle.Title}</h1>\n            </div>\n            <p><strong>IMDB Rating:</strong><br/>{movieArticle.imdbRating}</p>\n            <p><strong>Release Date:</strong><br/>{movieArticle.Released}</p>\n            <p><strong>Run Time:</strong><br/>{movieArticle.Runtime}</p>\n            <p><strong>Genre:</strong><br/>{movieArticle.Genre}</p>\n            <p><strong>Cast:</strong><br/>{movieArticle.Actors}</p>\n            <p><strong>Plot:</strong><br/>{movieArticle.Plot}</p>\n          </div>\n        </div>\n        </>\n      }\n    </>\n  );\n}\n\nexport default Article;\n\n\n","import { connect } from 'react-redux';\n\nimport Article from './Article';\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        movieArticle:state.movieArticle,\n        loading:state.loading,\n\n    }\n}\n\nexport default connect(mapStateToProps)(Article);\n\n\n","import React, { Component } from \"react\";\n// import { Container, Navbar } from 'react-bootstrap';\n\n\n\nclass Footer extends Component {\n\n    render() {\n\n        return (\n            <>\n                <footer className=\"main-footer\">\n                <p className=\"footer-text\">Master Movies Database - Designed by Ross Ferreira &copy; 2020</p>\n                </footer>\n            </>\n        );\n    }\n}\nexport default Footer;","import React, { Component } from \"react\";\n\n\nclass Header extends Component {\n\n    render() {\n\n        return (\n            <>\n                <header className=\"main-header\">\n                    {/* <div className=\"header-cont\"></div> */}\n                        <img alt=\"popcorn\" src=\"http://www.myiconfinder.com/uploads/iconsets/64-64-e327f1aec173bf90e7f92b23192c8d6c-popcorn.png\"/>\n                        <div className=\"typography-heading-cont\">\n                            <h1 className=\"main-title\">Master Movies</h1>\n                            <h3 className=\"sub-main-title\">No.1 Movie Database</h3>\n                        </div>\n                        <img alt=\"popcorn\" src=\"http://www.myiconfinder.com/uploads/iconsets/64-64-e327f1aec173bf90e7f92b23192c8d6c-popcorn.png\"/>\n                    \n                </header>\n            </>\n        );\n    }\n}\nexport default Header;\n","import React, { Fragment } from \"react\";\n\nimport { HashRouter as Router, Route,Switch } from \"react-router-dom\";\n\nimport SearchForm from './components/SearchForm';\n\nimport Article from './components/Article';\n\nimport Footer from \"./components/Footer\";\n\nimport Header from \"./components/Header\";\n\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <>\n      <Fragment>\n        <Router>\n          <Footer/>\n          <Header/>\n          <Route exact path=\"/\">\n          <SearchForm/>\n          </Route>\n          <Route exact path=\"/movie\">\n            <Article/>\n          </Route>\n        </Router>\n      </Fragment>\n    </>\n  );\n}\n\nexport default App;\n\n\n","export default {\n    counter: 1,\n    movieArticle:[],\n    searchResults: [],\n    initialform: {\n        title: \"\",\n        year: \"\",\n    },\n    totalResults: 0,\n    currentPage: 1,\n    loading: false,\n    typeValue: \"movie\",\n    plotValue: 'full'\n}","import { createStore, applyMiddleware, compose } from \"redux\";\nimport initial from '../data/initial';\nimport reducer from '../reducer/reducer'; \nimport thunk from \"redux-thunk\";\n    \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  \n  export default createStore(\n      reducer, \n      initial,\n      composeEnhancers(applyMiddleware(thunk))\n      );\n","import initial from '../data/initial'\n\nconst setSearchResults = (state,{data}) => ({ ...state, searchResults: data });\n\nconst setMovieArticle = (state,{data}) => ({ ...state, movieArticle: data });\n\nconst setTotalResponses = (state,{data}) => ({ ...state, totalResults: data });\n\nconst setCurrentPage = (state,{selectPage}) => ({ ...state, currentPage: selectPage });\n\nconst loadingState = state => ({ ...state, loading: !state.loading});\n\nconst setType = (state,{newTypeValue}) => ({ ...state, typeValue: newTypeValue});\n\nconst setPlot = (state,{newPlotValue}) => ({ ...state, plotValue: newPlotValue});\n\nconst setSearchForm = (state,{newSearchValue}) => ({ ...state, initialform: newSearchValue});\n\nexport default (state, action) => {\n  \n    switch (action.type) {\n        case \"setsearch\": return setSearchResults (state,action);\n        case \"setarticle\": return setMovieArticle (state,action);\n        case \"settotalresponses\": return setTotalResponses (state,action);\n        case \"setloading\": return loadingState (state);\n        case \"SETCURRENTPAGE\": return setCurrentPage (state,action);\n        case \"SETTYPE\": return setType (state,action);\n        case \"SETPLOT\": return setPlot (state,action);\n        case \"SETSEARCHFORM\": return setSearchForm (state,action);\n        case \"RESET\": return initial;\n        default: return state;\n    }\n};","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport {Provider} from \"react-redux\";\n\nimport App from '../src/App';\n\nimport store from './data/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// </React.StrictMode>, for StrictMode is a tool for highlighting potential problems in an application\n// Like Fragment, StrictMode does not render any visible UI.\n"],"sourceRoot":""}